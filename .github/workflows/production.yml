name: '[endfather] Production'

on:
  push:
    tags:
      - "v*-endfather"
env:
  DOCKER_REGISTRY: registry.cn-hongkong.aliyuncs.com

jobs:

  build-app-java:
    name: Build app java
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - babosa
    steps:
      - uses: actions/checkout@v4

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.14.0
        with:
          java-version: 17
          maven-version: 3.9.8

      - name: Checkout
        uses: fewensa/actions/clone-any@main
        with:
          platform: gitlab
          repository: prtmax/endfather
          access_token: '${{ secrets.GITLAB_TOKEN }}'
          ref_file: .github/ref.txt

      - name: Build ${{ matrix.package }}
        run: |
          cd ${{ matrix.package }}
          mvn clean package -Dmaven.test.skip=true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact-java
          path: |
            babosa/launchers/*/target/dist/*.gz
            babosa/tasks/*/target/dist/*.gz

  build-docker-image:
    name: Build docker image
    runs-on: ubuntu-latest
    needs:
      - build-app-java
    strategy:
      matrix:
        package:
          - LAUNCHER: launchers/analysis
            SLUG: launcher-analysis
          # - LAUNCHER: launchers/boogie
          #   SLUG: launcher-boogie
          - LAUNCHER: launchers/labelexpert
            SLUG: launcher-labelexpert
          - LAUNCHER: launchers/metaprint
            SLUG: launcher-metaprint
          - LAUNCHER: launchers/universal
            SLUG: launcher-universal
          - LAUNCHER: launchers/woodii
            SLUG: launcher-woodii
          - LAUNCHER: tasks/infra
            SLUG: task-infra
    steps:
      - uses: actions/checkout@v4
      - name: Checkout
        uses: fewensa/actions/clone-any@main
        with:
          platform: gitlab
          repository: prtmax/endfather
          access_token: '${{ secrets.GITLAB_TOKEN }}'
          ref_file: .github/ref.txt

      - uses: actions/download-artifact@v4
        with:
          name: artifact-java
          path: babosa

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.REGISTRY_ALI_USERNAME }}
          password: ${{ secrets.REGISTRY_ALI_PASSWORD }}

      - uses: benjlevesque/short-sha@v1.2

      - name: Publish docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          context: babosa/${{ matrix.package.LAUNCHER }}
          file: babosa/${{ matrix.package.LAUNCHER }}/docker/Dockerfile
          tags: |
            ${{ env.DOCKER_REGISTRY }}/coohk/riy-hk:${{ matrix.package.SLUG }}-sha-${{ env.SHA }}

      - uses: fewensa/actions/tepusher@main
        if: failure()
        with:
          template: .maintain/notify/build-failed-docker-image.md
          token: ${{ secrets.WEPLUSBOT_TOKEN }}
          receiver: 66bc2051e4b0e36f485a957b
          aters: C1776236406
          patto: C1776236406
          vars: |
            environment: 正式环境
            app: ${{ matrix.package.LAUNCHER }}


  migrate-db:
    name: Migrate database
    runs-on: ubuntu-latest
    needs:
      - build-docker-image
    strategy:
      matrix:
        project:
          #- boogie
          - cornerstone
          - analysis
    steps:
      - uses: actions/checkout@v4
      - name: Checkout
        uses: fewensa/actions/clone-any@main
        with:
          platform: gitlab
          repository: prtmax/endfather
          access_token: '${{ secrets.GITLAB_TOKEN }}'
          ref_file: .github/ref.txt

#      - name: Migrate boogie
#        uses: docker://liquibase/liquibase:4.23
#        if: ${{ matrix.project == 'boogie' }}
#        env:
#          LIQUIBASE_COMMAND_DRIVER: org.mariadb.jdbc.Driver
#        with:
#          args: >
#            --search-path=./traice/boogie/liquibase
#            update
#            --url="jdbc:mariadb://${{ secrets.BABOSA_DB_BOOGIE_HOST_PRD }}/boogie_prd?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8"
#            --username=${{ secrets.BABOSA_DB_BOOGIE_USER_PRD }}
#            --password=${{ secrets.BABOSA_DB_BOOGIE_PASSWORD_PRD }}
#            --changelog-file=master.xml

      - name: Migrate cornerstone
        uses: docker://liquibase/liquibase:4.23
        if: ${{ matrix.project == 'cornerstone' }}
        env:
          LIQUIBASE_COMMAND_DRIVER: org.mariadb.jdbc.Driver
        with:
          args: >
            --search-path=./traice/cornerstone/liquibase
            update
            --url="jdbc:mariadb://${{ secrets.BABOSA_DB_CORNERSTONE_HOST_PRD }}/babosa_prd?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8"
            --username=${{ secrets.BABOSA_DB_CORNERSTONE_USER_PRD }}
            --password=${{ secrets.BABOSA_DB_CORNERSTONE_PASSWORD_PRD }}
            --changelog-file=master.xml

      - name: Migrate analysis
        uses: docker://liquibase/liquibase:4.23
        if: ${{ matrix.project == 'analysis' }}
        env:
          LIQUIBASE_COMMAND_DRIVER: org.mariadb.jdbc.Driver
        with:
          args: >
            --search-path=./traice/analysis/liquibase
            update
            --url="jdbc:mariadb://${{ secrets.BABOSA_DB_ANALYSIS_HOST_PRD }}/analysis_prd?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8"
            --username=${{ secrets.BABOSA_DB_ANALYSIS_USER_PRD }}
            --password=${{ secrets.BABOSA_DB_ANALYSIS_PASSWORD_PRD }}
            --changelog-file=master.xml

      - uses: fewensa/actions/tepusher@main
        if: failure()
        with:
          template: .maintain/notify/migrate-failed.md
          token: ${{ secrets.WEPLUSBOT_TOKEN }}
          receiver: 66bc2051e4b0e36f485a957b
          aters: C1776236406
          patto: C1776236406
          vars: |
            environment: 正式环境
            app: ${{ matrix.project }}

  deploy-app-java:
    name: Deploy app java
    runs-on: ubuntu-latest
    needs:
      - migrate-db
    steps:
      - uses: actions/checkout@v4
      - name: Checkout
        uses: fewensa/actions/clone-any@main
        with:
          platform: gitlab
          repository: prtmax/endfather
          access_token: '${{ secrets.GITLAB_TOKEN }}'
          ref_file: .github/ref.txt

      - uses: benjlevesque/short-sha@v1.2
      - name: Generate variables
        run: |
          TEMPLATE_FILE=.maintain/playbooks.yml

          IMAGE_TAG_BASE=${{ env.DOCKER_REGISTRY }}/coohk/riy-hk

          #IMAGE_TAG_LAUNCHER_BOOGIE=${IMAGE_TAG_BASE}:launcher-boogie-sha-${{ env.SHA }}
          IMAGE_TAG_TASK_INFRA=${IMAGE_TAG_BASE}:task-infra-sha-${{ env.SHA }}
          IMAGE_TAG_LAUNCHER_ANALYSIS=${IMAGE_TAG_BASE}:launcher-analysis-sha-${{ env.SHA }}
          IMAGE_TAG_LAUNCHER_LABELEXPERT=${IMAGE_TAG_BASE}:launcher-labelexpert-sha-${{ env.SHA }}
          IMAGE_TAG_LAUNCHER_METAPRINT=${IMAGE_TAG_BASE}:launcher-metaprint-sha-${{ env.SHA }}
          IMAGE_TAG_LAUNCHER_UNIVERSAL=${IMAGE_TAG_BASE}:launcher-universal-sha-${{ env.SHA }}
          IMAGE_TAG_LAUNCHER_WOODII=${IMAGE_TAG_BASE}:launcher-woodii-sha-${{ env.SHA }}

          #yq e ".docker_app_runner.container.launcher_boogie.image = \"${IMAGE_TAG_LAUNCHER_BOOGIE}\"" --inplace ${TEMPLATE_FILE}
          yq e ".docker_app_runner.container.task_infra.image = \"${IMAGE_TAG_TASK_INFRA}\"" --inplace ${TEMPLATE_FILE}
          yq e ".docker_app_runner.container.launcher_analysis.image = \"${IMAGE_TAG_LAUNCHER_ANALYSIS}\"" --inplace ${TEMPLATE_FILE}
          yq e ".docker_app_runner.container.launcher_labelexpert.image = \"${IMAGE_TAG_LAUNCHER_LABELEXPERT}\"" --inplace ${TEMPLATE_FILE}
          yq e ".docker_app_runner.container.launcher_metaprint.image = \"${IMAGE_TAG_LAUNCHER_METAPRINT}\"" --inplace ${TEMPLATE_FILE}
          yq e ".docker_app_runner.container.launcher_universal.image = \"${IMAGE_TAG_LAUNCHER_UNIVERSAL}\"" --inplace ${TEMPLATE_FILE}
          yq e ".docker_app_runner.container.launcher_woodii.image = \"${IMAGE_TAG_LAUNCHER_WOODII}\"" --inplace ${TEMPLATE_FILE}

          mkdir dist

          DEPLOYMENT_FILE=playbooks/babosa-prd/host_vars/cn1.ek.iprtapp.com.yml

          jq -n \
            --arg file ${DEPLOYMENT_FILE} \
            --arg content "$(cat ${TEMPLATE_FILE})" \
            '{file: $file, content: $content}' >> dist/change.json

          jq -crs '.' < dist/change.json > dist/changes.json
          cat dist/changes.json

      - name: Deploy
        uses: fewensa/actions/ansible-deploy@main
        with:
          trigger_url: ${{ secrets.CI_TRIGGER_ENDPOINT }}
          trigger_token: ${{ secrets.CI_TRIGGER_TOKEN }}
          project_name: prtmax/endfather
          changes: dist/changes.json
          ac_git_ref: __origin__/.github/ref.txt
          commit_message: __origin__/.github/message.txt

      - uses: fewensa/actions/tepusher@main
        if: failure()
        with:
          template: .maintain/notify/deploy-app.md
          token: ${{ secrets.WEPLUSBOT_TOKEN }}
          receiver: 66bc2051e4b0e36f485a957b
          aters: C1776236406
          patto: C1776236406
          vars: |
            environment: 正式环境
            app: babosa

  deploy-app-node:
    name: Build app node
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - woodii
    steps:
      - uses: actions/checkout@v4

      - name: Checkout
        uses: fewensa/actions/clone-any@main
        with:
          platform: gitlab
          repository: prtmax/endfather
          access_token: '${{ secrets.GITLAB_TOKEN }}'
          ref_file: .github/ref.txt

      - uses: fewensa/actions/smart-vercel@main
        name: Deploy to Vercel
        with:
          node_version: 20
          vercel_token: ${{ secrets.VERCEL_TOKEN }}
          vercel_group: provence
          preview_output: true
          workdir: ${{ matrix.package }}
          project_name: endfather-woodii
          script_build: yarn build:prd
          dist_path: dist-prd
          enable_cache: true
          prod_mode: true

      - uses: fewensa/actions/tepusher@main
        if: failure()
        with:
          template: .maintain/notify/deploy-app.md
          token: ${{ secrets.WEPLUSBOT_TOKEN }}
          receiver: 66bc2051e4b0e36f485a957b
          aters: C1776236406
          patto: C1776236406
          vars: |
            environment: 正式环境
            app: ${{ matrix.package }}

  clean-artifacts:
    name: Clean artifacts
    runs-on: ubuntu-latest
    needs:
      - build-docker-image
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: artifact-java
